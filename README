Набор бинарных утилит для операций с apk и скрипт для облегчения типовых операций

\7za.exe - архиватор - http://www.7-zip.org/download.html
\apktool.jar - программа для сборки-разборки apk - http://code.google.com/p/android-apktool/
\aapt_Custom.exe - программа, требующаяся для сборки apk (из комплекта apktool)
\aapt_SDK.exe - программа, требующаяся для сборки apk (из комплекта Android SDK) - http://developer.android.com/sdk/index.html

По умолчанию для разборки-сборки apk файлов (в т.ч. фреймворка) используется более свежая версия aapt.exe из SDK. Версия из набора apktool не умеет обрабатывать нестандартные названия ресурсов (вроде drawable-sw600dp-mdpi - выдает ошибку вида "invalid resource directory name: ...\res/values-sw600dp-port"), поэтому версия из SDK более всеядна. Тем не менее, если эта версия у вас выдает ошибки при разборке или сборке, можно попробовать использовать apktool версию. Для этого откройте APK_worker.bat в текстовом редакторе и раскомментируйте строчку ":: set AAPT=aapt_Custom.exe" (просто уберите символы "::").

Скрипт APK_Worker

Позволяет легко выполнять основные операции с APK

APK_Worker.bat {command} [{source}] [{param}]
  command:
    ?, help - справка
    decomp - полная декомпиляция APK (ресурсы + код) в папку {apk_path}\{apk_name}
      {source} = полный путь к APK
    decomp_res - декомпиляция APK (только ресурсы - быстрее) в папку {apk_path}\{apk_name}
      {source} = полный путь к APK
    decomp_src - декомпиляция APK (только код) в папку {apk_path}\{apk_name}
      {source} = полный путь к APK
    fixfolders - переименовать папки, которые apktool распаковал неправильно.
      В некоторых APK встречаются папки с названиями вроде "drawable-hdpi-v4", которые при декомпиляции становятся просто "drawable-hdpi". Собранный с такой модификацией, APK может падать при запуске либо в процессе работы. Поэтому перед дальнейшими действиями папки надо вернуть в исходное состояние.
      {source} = полный путь к папке с декомпилированным APK
      {param} = полный путь к файлу списка с данными для переименования папок
          Формат файла списка:
          {src_path} {dest_name} - на каждой строке один путь
            {src_path} = путь к папке с именем, назначенным при декомпиляции, относительно корня APK.
            {dest_name} = имя папки, которое должно быть
          Пример:
            "res\drawable-hdpi drawable-hdpi-v4"
    build - собрать APK в папку {apk_path}\build\
      {source} = полный путь к папке с декомпилированным APK
    modify - добавить/заменить/удалить файлы в APK
      {source} = полный путь к APK
      {param} = {src_folder} {lst_file}
        {src_folder} = полный путь к папке, откуда копировать файлы. Папка должна повторять структуру APK
        {lst_file} = полный путь к файлу списка с указанием уровня сжатия и путей добавляемых/удаляемых файлов
          Формат файла списка:
          {comp_lvl} {rel_file_path} - на каждой строке один путь
            {comp_lvl} = "0" - добавить/заменить без сжатия, "5" - добавить/заменить с обычным сжатием, "-" - удалить
            {rel_file_path} = путь относительно корня APK. Может включать маску.
          Примеры:
            "0 res\drawable\background.png" - добавить {src_folder}\res\drawable\background.png без сжатия
            "0 res\xml\bla.xml" - добавить {src_folder}\res\xml\bla.xml с обычным сжатием
            "- META-INF\CERT.RSA" - удалить META-INF\CERT.RSA
    sign - удалить имеющиеся сертификаты и подписать APK
      {source} = полный путь к APK
    clean - удалить фреймворки из %HOMEDRIVE%%HOMEPATH%\apktool\framework